#summary Getting Started with add mvc
#labels Phase-Deploy,Featured
= Basic Files =
== Config ==
First you need a config variable:
{{{
<?php
$C = (object) array(
      'add_dir'            => realpath('includes/frameworks/add'),
      'environment_status' => 'development',
   );
}}}

Either you put it on a new file (eg. config.php) or on the main root execution file (eg. add.php)

In this example it is necessary that to declare "add_dir" so on add.php it can be used to require "init.php" of the add mvc framework.

== Main Execution File ==

Then you'll need to create the main execution file (eg. add.php):
{{{
<?php

require '../config.php';

require $C->add_dir.'/init.php';

add::current_controller()->execute();

}}}

add::current_controller() returns the current controller according to the current path, and execute() is the execution function, as the name implies.


== .htaccess Rewrite ==
and create an htaccess rewrite, notice that "add.php" is used, depending on the name of your _main execution file_
{{{
RewriteEngine On

RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule ^(.+)$ add.php?add_mvc_path=$1&%{QUERY_STRING} [L]
RewriteRule ^$ add.php?add_mvc_path=$1&%{QUERY_STRING} [L]
}}}

= Classes =
== Your First Controller ==
To overwrite the default index page, you should make <ctrl_page_index.class.php> file under your includes/classes directory.

Example:

{{{
<?php
/**
 * The home page
 */
CLASS ctrl_page_index EXTENDS ctrl_tpl_page {

}
}}}
=== Controller Methods ===

https://add-mvc-framework.googlecode.com/svn/wiki/assets/images/add-controller.png

 # execute() - the root method of the controller this function calls by default process_data() and print_response() and is called in your [GettingStarted#Main_Execution_File Main Execution File]. For best practice this method should not be extended.
   # `process_data()` - this method should contain the data processing of the controller. By default, this calls process_mode()
      # `pre_mode_process()` (version 0.9) - To be extended to add a process *before* the processing of the `$_REQUEST['mode']`
      # process_mode() - Creates an array of registered gpc. Calls the applicable `process_mode_$_REQUEST['mode']`($gpc). For best practice this method should not be extended
      # post_mode_process() (version 0.9) - To be extended to add a process *after* the processing of the `$_REQUEST['mode']`
   # `print_response($data)` - prints the view. For best practice this method should not be extended
 # assign($field,$value) - assigns a data to the controller. This will also automatically call `smarty assign()` for the view.

=== Modes and Sub Modes ===

ADD MVC has built in support for actions or modes (for consistency, we will call these "modes") of pages/resources (for consistency we will call these "resources").

Modes are further discussed on this page: [ModesAndSubModes Modes and Sub Modes]

== Your ADODB connection ==
before models could work, you will need to get the ADODB connection:
{{{
CLASS my_adodb_mysql EXTENDS add_adodb_mysql {
   /**
    * googlecode todo: add code here
    */
}
}}}
== Your First Model ==
{{{
/**
 * A model representing `members` table
 */
CLASS member EXTENDS model_auth {
   /**
    * The table of this model
    */
   const TABLE = 'members';
   /**
    * The primary key of this model
    */
   const TABLE_PK = 'id';
   /**
    * The db abstraction layer
    */
   public static function db() {
      return my_adodb_mysql::singleton();
   }
}
}}}

note that it extends a preset extra model model_auth, but the very basic model you can extend is model_rwd. You can also extend model_r (read only) and other extra models like model_image_rwd

=== Using models ===

{{{
/**
 * The homepage
 */
CLASS ctrl_page_index EXTENDS ctrl_tpl_page {
   /**
    * The pre-response process
    */
   public function process_data() {
      # Getting the current logged in
      $this->assign('current_member',member::current_logged_in());
      # Getting member #1
      $this->assign('featured_member',member::get_instance(1));
   }

}
}}}

== Views ==
ADD MVC uses smarty templating engine on the View, the view names are the same as the controller's basename.