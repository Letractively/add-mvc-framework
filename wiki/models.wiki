#summary ADD MVC Models
#labels Phase-Design

= Introduction =
  on ADD MVC, model classes represents table of the database.

  for each table on the database you want to manipulate, you will have to create a model for it.


== Model Names ==

   the class names of models is not restricted, but as a good practice, use the singular form of the table names (eg. member for ``members`` table)


== Basic Code ==

{{{
CLASS company EXTENDS model_rwd {
   /**
    * The table
    */
   const TABLE = 'company';
   /**
    * The table's primary key
    */
   const TABLE_PK = 'company_id';
   /**
    * The ADODB object 
    *
    */
   public function db() {
     return my_application_adodb::singleton();
   }
}
}}}

Where: const TABLE is the table of the company and TABLE_PK is the primary key field and db() is the adodb object

== Basic Functions ==
  * insertion
    * `company::add_new(array $row)` - inserts a new row and returns the new instance
  * selections
    * `company::get_instance(mixed $id)` - gets the row with primary key $id
    * `company::get_where_order_page(mixed $where, string $order_by, int $page, int $per_page)` - returns array of instances of the model according to the parameters given
  * updates
    * `$company->company_name="New Company Name" `
      assign a new value on the object property and it will updated on script shutdown
  * delete
    * `$company->delete()`

== Function List ==
 === model_rwd::db() ===
   returns the adodb object. To set this, extend this inside the concrete model class so you can return your own value. (There is no default)
 === $model_rwd->update_db_row() ===
   updates the updated fields of the row (instead of waiting for script shutdown)
 === model_rwd::instances_from_sql($sql_format,$page=null,$per_page=null) === 
gets all the instances from the select sql, you have to use %s on the selected fields, and another %s for the table name of the model class.  
{{{
   $company = company::instances_from_sql("SELECT %s FROM %s WHERE category='1'");
}}}
note: you have to use %% for % when using this function (eg. `LIKE '%%foo%%'`
 === get_where_order_page($conditions,$order_by=NULL,$page=NULL,$per_page=NULL) === 