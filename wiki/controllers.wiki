#summary ADD MVC Controllers
#labels Phase-Design
= Introduction =
In ADD Framework, Resources(pages) are created through controllers classes stored in classes directory.

on the main execution file (e.g. add.php) add::current_controller() fetches the controller for the current page, then it's execute() method is called.

ADD MVC controllers has [modesAndSubModes Modes and Sub Modes] that enables code isolation for different modes and/or actions. And GPC(or global) variable registration system.


= Default Controller Classes =
 * [http://mvc.add.ph/docs/classes/ctrl_page_index.html ctrl_page_index] - default homepage
 * [http://mvc.add.ph/docs/classes/ctrl_page_404.html ctrl_page_404] - default 404 page

= Abstract Controller Classes =
 * [http://mvc.add.ph/docs/classes/ctrl_tpl_page.html ctrl_tpl_page] - for normal html pages
 * [http://mvc.add.ph/docs/classes/ctrl_tpl_ajax.html ctrl_tpl_ajax] - for ajax resources
 *  [http://mvc.add.ph/docs/classes/ctrl_tpl_aux.html ctrl_tpl_aux] - for auxiliary controllers


=== Controller Methods ===

https://add-mvc-framework.googlecode.com/svn/wiki/assets/images/add-controller.png

The following are few of the methods you will need the most:
 # `execute()` - the root method of the controller. When execute() ( formerly page() ) is called, by default it calls process_data() ( formerly process() ) and print_response(). There will only be a few chance that you will need to extend this method. Instead, see the following methods:
   # `process_data()` - this method should contain the data processing of the controller. By default, this calls process_mode()
      # `pre_mode_process()` (version 0.9) - To be extended to add a process *before* the processing of the `$_REQUEST['mode']`
      # process_mode() - Creates an array of registered gpc. Calls the applicable `process_mode_$_REQUEST['mode']`($gpc). For best practice this method should also not be extended
      # `post_mode_process`() (version 0.9) - To be extend to add a process *after* the processing of the `$_REQUEST['mode']`
      # `process_mode_$_REQUEST['mode']` - to be declared to have a custom process for a certain mode. see [modesAndSubModes Modes and Sub Modes]
   # `print_response($data)` - prints the view. For best practice this method should not be extended
 # assign($field,$value) - assigns a data to the controller. This will also automatically call `smarty assign()` for the view.

=== Modes and Sub Modes ===

ADD MVC has built in support for actions or modes (for consistency, we will call these "modes") of pages/resources (for consistency we will call these "resources").

Modes are further discussed on this page: [modesAndSubModes Modes and Sub Modes]

=Examples=
demos/trunk/simple/includes/classes/ctrl_page_login.class.php
{{{
<?php
/**
 * Login controller demo
 */
CLASS ctrl_page_login EXTENDS ctrl_tpl_page {

   /**
    * Login Request variables - username and password from $_REQUEST
    *
    */
   protected $mode_gpc_login = array( '_REQUEST' => array( 'username', 'password' ));

   /**
    * Login
    *
    * @param array $gpc - contains $gpc['username'] and $gpc['password']
    *
    */
   public function process_mode_login($gpc) {

      # validation on controller
      if (empty($gpc['username'])) {
         throw new e_user_input("Blank username");
      }
      if (empty($gpc['password'])) {
         throw new e_user_input("Blank password");
      }

      # login the session user class
      member::login($gpc['username'],$gpc['password']);
   }



   /**
    * Logout request variables - none
    *
    */
   protected $mode_gpc_logout = array();
   /**
    * Logout mode
    *
    * @param array $gpc - blank array
    *
    */
   public function process_mode_logout($gpc) {
      member::logout();
   }

}
}}}